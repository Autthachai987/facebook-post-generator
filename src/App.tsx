import React, { useState } from 'react';
import { Calendar, Clock, Hash, Sparkles, Copy, Check, Instagram, Zap, Menu, X } from 'lucide-react';

interface PostData {
  topic: string;
  tone: string;
  mood: string;
  date: string;
  time: string;
}

const App: React.FC = () => {
  const [formData, setFormData] = useState<PostData>({
    topic: '',
    tone: 'casual',
    mood: 'positive',
    date: '',
    time: ''
  });
  
  const [generatedPost, setGeneratedPost] = useState('');
  const [hashtags, setHashtags] = useState<string[]>([]);
  const [isGenerating, setIsGenerating] = useState(false);
  const [copied, setCopied] = useState(false);
  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);

  const tones = [
    { value: 'casual', label: 'üòä ‡∏™‡∏ö‡∏≤‡∏¢‡πÜ ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£' },
    { value: 'professional', label: 'üíº ‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£ ‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û' },
    { value: 'friendly', label: 'ü§ù ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏±‡∏ô‡πÄ‡∏≠‡∏á ‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô' },
    { value: 'humorous', label: 'üòÑ ‡∏ï‡∏•‡∏Å ‡∏™‡∏ô‡∏∏‡∏Å‡∏™‡∏ô‡∏≤‡∏ô' },
    { value: 'inspirational', label: '‚ú® ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏£‡∏á‡∏ö‡∏±‡∏ô‡∏î‡∏≤‡∏•‡πÉ‡∏à' },
    { value: 'informative', label: 'üìö ‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤' }
  ];

  const moods = [
    { value: 'positive', label: 'üòä ‡πÄ‡∏ä‡∏¥‡∏á‡∏ö‡∏ß‡∏Å ‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç', emoji: 'üòä' },
    { value: 'excited', label: 'üéâ ‡∏ï‡∏∑‡πà‡∏ô‡πÄ‡∏ï‡πâ‡∏ô ‡∏Å‡∏£‡∏∞‡∏ï‡∏∑‡∏≠‡∏£‡∏∑‡∏≠‡∏£‡πâ‡∏ô', emoji: 'üéâ' },
    { value: 'thoughtful', label: 'ü§î ‡πÉ‡∏Ñ‡∏£‡πà‡∏Ñ‡∏£‡∏ß‡∏ç ‡∏•‡∏∂‡∏Å‡∏ã‡∏∂‡πâ‡∏á', emoji: 'ü§î' },
    { value: 'grateful', label: 'üôè ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì ‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏ã‡∏≤‡∏ö‡∏ã‡∏∂‡πâ‡∏á', emoji: 'üôè' },
    { value: 'motivational', label: 'üí™ ‡∏Å‡∏£‡∏∞‡∏ï‡∏∏‡πâ‡∏ô‡πÉ‡∏à ‡πÄ‡∏£‡πâ‡∏≤‡πÉ‡∏à', emoji: 'üí™' },
    { value: 'calm', label: 'üòå ‡∏™‡∏á‡∏ö ‡∏ú‡πà‡∏≠‡∏ô‡∏Ñ‡∏•‡∏≤‡∏¢', emoji: 'üòå' }
  ];

  const generatePost = () => {
    if (!formData.topic.trim()) {
      alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÇ‡∏û‡∏™‡∏ï‡πå');
      return;
    }

    setIsGenerating(true);
    
    setTimeout(() => {
      const moodEmoji = moods.find(m => m.value === formData.mood)?.emoji || 'üòä';
      
      let post = '';
      
      if (formData.tone === 'professional') {
        post = `üì¢ ${formData.topic}\n\n‡πÄ‡∏£‡∏≤‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏ö‡πà‡∏á‡∏õ‡∏±‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö ${formData.topic} ‡∏Å‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡∏ó‡πà‡∏≤‡∏ô ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡πÅ‡∏•‡∏∞‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô\n\n‡∏´‡∏≤‡∏Å‡∏ó‡πà‡∏≤‡∏ô‡∏™‡∏ô‡πÉ‡∏à‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÑ‡∏î‡πâ‡πÄ‡∏™‡∏°‡∏≠‡∏Ñ‡∏£‡∏±‡∏ö/‡∏Ñ‡πà‡∏∞ ${moodEmoji}`;
      } else if (formData.tone === 'humorous') {
        post = `555+ ‡∏°‡∏≤‡∏ü‡∏±‡∏á‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á ${formData.topic} ‡∏Å‡∏±‡∏ô‡∏´‡∏ô‡πà‡∏≠‡∏¢! üòÑ\n\n‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏™‡∏ô‡∏∏‡∏Å‡πÜ ‡∏°‡∏≤‡∏ù‡∏≤‡∏Å‡∏Å‡∏±‡∏ô‡∏Ñ‡πà‡∏∞ ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö ${formData.topic} ‡∏ã‡∏∂‡πà‡∏á‡∏ñ‡πâ‡∏≤‡∏û‡∏π‡∏î‡∏ï‡∏£‡∏á‡πÜ... ‡∏°‡∏±‡∏ô‡∏™‡∏ô‡∏∏‡∏Å‡∏°‡∏≤‡∏Å‡∏à‡∏£‡∏¥‡∏á‡πÜ! ${moodEmoji}\n\n‡πÉ‡∏Ñ‡∏£‡πÄ‡∏Ñ‡∏¢‡πÄ‡∏à‡∏≠‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡∏ö‡πâ‡∏≤‡∏á ‡πÅ‡∏ä‡∏£‡πå‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏Å‡∏±‡∏ô‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏™‡∏¥ üòÜ`;
      } else if (formData.tone === 'inspirational') {
        post = `‚ú® ${formData.topic} - ‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÅ‡∏´‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à\n\n‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏û‡∏π‡∏î‡∏ñ‡∏∂‡∏á ${formData.topic} ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏ô‡∏∂‡∏Å‡∏ñ‡∏∂‡∏á‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ‡πÉ‡∏´‡∏°‡πà‡πÜ ‡πÄ‡∏™‡∏°‡∏≠\n\n‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ô‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£ ‡πÅ‡∏•‡∏∞‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡πà‡∏≤‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠‡∏à‡∏∏‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î ${moodEmoji}\n\n#‡∏≠‡∏¢‡πà‡∏≤‡∏¢‡∏≠‡∏°‡πÅ‡∏û‡πâ #‡∏™‡∏π‡πâ‡∏ï‡πà‡∏≠‡πÑ‡∏õ`;
      } else if (formData.tone === 'informative') {
        post = `üìö ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à: ${formData.topic}\n\n‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡∏µ‡πÜ ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö ${formData.topic} ‡∏°‡∏≤‡πÅ‡∏ä‡∏£‡πå‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡πÜ ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏ó‡∏£‡∏≤‡∏ö‡∏Å‡∏±‡∏ô\n\n‚úÖ ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡∏£‡∏π‡πâ\n‚úÖ ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö\n‚úÖ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô\n\n‡∏´‡∏ß‡∏±‡∏á‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡∏ô‡∏∞‡∏Ñ‡∏∞ ${moodEmoji}`;
      } else if (formData.tone === 'friendly') {
        post = `‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏≤! ü§ó\n\n‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏≤‡∏Å‡∏°‡∏≤‡∏û‡∏π‡∏î‡∏Ñ‡∏∏‡∏¢‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á ${formData.topic} ‡∏Å‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡∏Ñ‡πà‡∏∞ ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à‡∏°‡∏≤‡∏Å‡πÜ ‡πÄ‡∏•‡∏¢‡∏≠‡∏¢‡∏≤‡∏Å‡∏°‡∏≤‡πÅ‡∏ä‡∏£‡πå‡∏Å‡∏±‡∏ô ${moodEmoji}\n\n‡πÉ‡∏Ñ‡∏£‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏´‡πá‡∏ô‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ô‡∏µ‡πâ ‡∏°‡∏≤‡πÅ‡∏ä‡∏£‡πå‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ‡∏ô‡∏∞‡∏Ñ‡∏∞ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏£‡∏±‡∏ö‡∏ü‡∏±‡∏á‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏≤ üíï`;
      } else {
        post = `‡πÄ‡∏Æ‡πâ‡∏¢! ‡∏°‡∏≤‡∏Ñ‡∏∏‡∏¢‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á ${formData.topic} ‡∏Å‡∏±‡∏ô‡∏´‡∏ô‡πà‡∏≠‡∏¢ üòä\n\n‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏à‡∏≠‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö ${formData.topic} ‡πÄ‡∏•‡∏¢‡∏≠‡∏¢‡∏≤‡∏Å‡∏°‡∏≤‡πÅ‡∏ä‡∏£‡πå‡∏Å‡∏±‡∏ô ‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏ß‡πà‡∏≤‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏ô‡∏ô‡πà‡∏≤‡∏à‡∏∞‡∏ä‡∏≠‡∏ö‡∏ô‡∏∞ ${moodEmoji}\n\n‡∏•‡∏≠‡∏á‡∏°‡∏≤‡∏î‡∏π‡∏Å‡∏±‡∏ô‡∏ß‡πà‡∏≤‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡∏Ñ‡∏¥‡∏î‡∏¢‡∏±‡∏á‡πÑ‡∏á‡∏ö‡πâ‡∏≤‡∏á ‡∏°‡∏≤‡∏Ñ‡∏∏‡∏¢‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢!`;
      }

      setGeneratedPost(post);
      
      const baseHashtags = [
        `#${formData.topic.replace(/\s+/g, '')}`,
        '#FacebookThailand',
        '#ThaiContent',
        '#SocialMedia'
      ];
      
      if (formData.mood === 'positive') {
        baseHashtags.push('#PositiveVibes', '#HappyMoments');
      } else if (formData.mood === 'excited') {
        baseHashtags.push('#Exciting', '#LetsGo');
      } else if (formData.mood === 'motivational') {
        baseHashtags.push('#Motivation', '#Inspiration');
      }
      
      if (formData.tone === 'professional') {
        baseHashtags.push('#Business', '#Professional');
      } else if (formData.tone === 'humorous') {
        baseHashtags.push('#Funny', '#LOL');
      }
      
      setHashtags(baseHashtags);
      setIsGenerating(false);
    }, 1500);
  };

  const copyToClipboard = () => {
    const fullPost = `${generatedPost}\n\n${hashtags.join(' ')}`;
    navigator.clipboard.writeText(fullPost);
    setCopied(true);
    setTimeout(() => setCopied(false), 2000);
  };

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    });
  };

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Navigation Bar */}
      <nav className="bg-gradient-to-r from-purple-600 via-pink-500 to-yellow-500 shadow-lg sticky top-0 z-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center h-16">
            {/* Logo */}
            <div className="flex items-center gap-3">
              <Instagram className="w-8 h-8 text-white" />
              <span className="text-white text-xl font-bold">AI Post Generator</span>
            </div>

            {/* Desktop Menu */}
            <div className="hidden md:flex items-center gap-6">
              <a href="#" className="text-white hover:text-yellow-200 font-medium transition-colors">‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å</a>
              <a href="#features" className="text-white hover:text-yellow-200 font-medium transition-colors">‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå</a>
              <a href="#about" className="text-white hover:text-yellow-200 font-medium transition-colors">‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏≤</a>
              <button className="bg-white text-purple-600 px-6 py-2 rounded-full font-semibold hover:bg-yellow-100 transition-all shadow-md">
                ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏£‡∏≤
              </button>
            </div>

            {/* Mobile Menu Button */}
            <button 
              onClick={() => setMobileMenuOpen(!mobileMenuOpen)}
              className="md:hidden text-white"
            >
              {mobileMenuOpen ? <X className="w-6 h-6" /> : <Menu className="w-6 h-6" />}
            </button>
          </div>

          {/* Mobile Menu */}
          {mobileMenuOpen && (
            <div className="md:hidden py-4 space-y-3 border-t border-white/20">
              <a href="#" className="block text-white hover:text-yellow-200 font-medium py-2">‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å</a>
              <a href="#features" className="block text-white hover:text-yellow-200 font-medium py-2">‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå</a>
              <a href="#about" className="block text-white hover:text-yellow-200 font-medium py-2">‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏≤</a>
              <button className="w-full bg-white text-purple-600 px-6 py-2 rounded-full font-semibold hover:bg-yellow-100 transition-all">
                ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏£‡∏≤
              </button>
            </div>
          )}
        </div>
      </nav>

      {/* Breadcrumb */}
      <div className="bg-white border-b">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-3">
          <div className="flex items-center gap-2 text-sm text-gray-600">
            <a href="#" className="hover:text-purple-600">Home</a>
            <span>-</span>
            <a href="#" className="hover:text-purple-600">AI Tools</a>
            <span>-</span>
            <span className="text-purple-600 font-medium">Facebook Post Generator</span>
          </div>
        </div>
      </div>

      {/* Main Content */}
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          
          {/* Main Content Area */}
          <div className="lg:col-span-2">
            {/* Page Title */}
            <h1 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
              AI Facebook Post Generator - ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏ó‡∏≥ SEO ‡πÑ‡∏î‡πâ‡∏î‡∏µ‡∏¢‡∏¥‡πà‡∏á‡∏Ç‡∏∂‡πâ‡∏ô!
            </h1>
            
            <div className="flex items-center gap-4 text-sm text-gray-600 mb-6">
              <span>‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏î‡∏¢ Claude AI</span>
              <span>‚Ä¢</span>
              <span>‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î {new Date().toLocaleDateString('th-TH')}</span>
            </div>

            {/* Featured Image */}
            <div className="mb-8 rounded-2xl overflow-hidden shadow-lg">
              <div className="bg-gradient-to-r from-purple-500 via-pink-500 to-yellow-500 p-12 flex items-center justify-center">
                <div className="text-center text-white">
                  <Instagram className="w-24 h-24 mx-auto mb-4" />
                  <h2 className="text-3xl font-bold mb-2">AI Post Generator</h2>
                  <p className="text-xl">‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏™‡∏π‡∏á‡πÉ‡∏ô‡πÑ‡∏°‡πà‡∏Å‡∏µ‡πà‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ</p>
                </div>
              </div>
            </div>

            {/* Form Card */}
            <div className="bg-white rounded-2xl shadow-lg p-6 md:p-8 mb-8">
              <div className="space-y-6">
                <div>
                  <label className="block text-sm font-bold text-gray-800 mb-2 flex items-center gap-2">
                    <Zap className="w-4 h-4 text-pink-500" />
                    ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÇ‡∏û‡∏™‡∏ï‡πå *
                  </label>
                  <input
                    type="text"
                    name="topic"
                    value={formData.topic}
                    onChange={handleInputChange}
                    placeholder="‡πÄ‡∏ä‡πà‡∏ô: ‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏Å‡∏≤‡∏£‡∏ï‡∏•‡∏≤‡∏î‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå, ‡∏™‡∏π‡∏ï‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏ä‡πâ‡∏≤‡πÅ‡∏™‡∏ô‡∏≠‡∏£‡πà‡∏≠‡∏¢"
                    className="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-pink-400 focus:outline-none transition-all"
                  />
                </div>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <label className="block text-sm font-bold text-gray-800 mb-2">
                      üé® ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏ó‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô
                    </label>
                    <select
                      name="tone"
                      value={formData.tone}
                      onChange={handleInputChange}
                      className="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-purple-400 focus:outline-none transition-all"
                    >
                      {tones.map(tone => (
                        <option key={tone.value} value={tone.value}>
                          {tone.label}
                        </option>
                      ))}
                    </select>
                  </div>

                  <div>
                    <label className="block text-sm font-bold text-gray-800 mb-2">
                      üí≠ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå‡∏Ç‡∏≠‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå
                    </label>
                    <select
                      name="mood"
                      value={formData.mood}
                      onChange={handleInputChange}
                      className="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-yellow-400 focus:outline-none transition-all"
                    >
                      {moods.map(mood => (
                        <option key={mood.value} value={mood.value}>
                          {mood.label}
                        </option>
                      ))}
                    </select>
                  </div>
                </div>

                <div className="bg-gradient-to-r from-purple-50 to-pink-50 rounded-xl p-4 border border-pink-200">
                  <h3 className="text-sm font-bold text-gray-800 mb-3 flex items-center gap-2">
                    <Calendar className="w-4 h-4 text-pink-500" />
                    ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡πÇ‡∏û‡∏™‡∏ï‡πå (‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö)
                  </h3>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                      <label className="block text-xs font-semibold text-gray-600 mb-1">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</label>
                      <input
                        type="date"
                        name="date"
                        value={formData.date}
                        onChange={handleInputChange}
                        className="w-full px-3 py-2 border-2 border-gray-200 rounded-lg focus:border-pink-400 focus:outline-none"
                      />
                    </div>
                    <div>
                      <label className="block text-xs font-semibold text-gray-600 mb-1">‡πÄ‡∏ß‡∏•‡∏≤</label>
                      <input
                        type="time"
                        name="time"
                        value={formData.time}
                        onChange={handleInputChange}
                        className="w-full px-3 py-2 border-2 border-gray-200 rounded-lg focus:border-pink-400 focus:outline-none"
                      />
                    </div>
                  </div>
                </div>

                <button
                  onClick={generatePost}
                  disabled={isGenerating}
                  className="w-full bg-gradient-to-r from-purple-600 via-pink-500 to-yellow-500 text-white py-4 rounded-xl font-bold text-lg hover:shadow-xl transform hover:scale-[1.02] active:scale-[0.98] transition-all disabled:opacity-50 flex items-center justify-center gap-3"
                >
                  {isGenerating ? (
                    <>
                      <div className="animate-spin rounded-full h-6 w-6 border-b-2 border-white"></div>
                      <span>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå...</span>
                    </>
                  ) : (
                    <>
                      <Sparkles className="w-6 h-6" />
                      <span>‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏î‡πâ‡∏ß‡∏¢ AI</span>
                    </>
                  )}
                </button>
              </div>
            </div>

            {/* Generated Post */}
            {generatedPost && (
              <div className="space-y-6">
                <div className="bg-white rounded-2xl shadow-lg p-6">
                  <div className="flex items-center justify-between mb-4">
                    <h3 className="text-xl font-bold bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent flex items-center gap-2">
                      <Sparkles className="w-5 h-5 text-pink-500" />
                      ‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô
                    </h3>
                    <button
                      onClick={copyToClipboard}
                      className="flex items-center gap-2 px-4 py-2 bg-gradient-to-r from-pink-500 to-yellow-500 text-white rounded-lg hover:shadow-lg font-semibold"
                    >
                      {copied ? (
                        <>
                          <Check className="w-4 h-4" />
                          <span>‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß!</span>
                        </>
                      ) : (
                        <>
                          <Copy className="w-4 h-4" />
                          <span>‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å</span>
                        </>
                      )}
                    </button>
                  </div>
                  <div className="bg-gray-50 rounded-xl p-6 border border-gray-200">
                    <p className="text-gray-800 whitespace-pre-wrap leading-relaxed">
                      {generatedPost}
                    </p>
                  </div>
                </div>

                {hashtags.length > 0 && (
                  <div className="bg-white rounded-2xl shadow-lg p-6">
                    <div className="flex items-center gap-2 mb-4">
                      <Hash className="w-5 h-5 text-yellow-600" />
                      <h3 className="text-xl font-bold bg-gradient-to-r from-yellow-600 to-pink-600 bg-clip-text text-transparent">
                        ‡πÅ‡∏Æ‡∏ä‡πÅ‡∏ó‡πá‡∏Å‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥
                      </h3>
                    </div>
                    <div className="flex flex-wrap gap-2">
                      {hashtags.map((tag, index) => (
                        <span
                          key={index}
                          className="px-4 py-2 bg-gradient-to-r from-purple-100 to-pink-100 text-pink-700 rounded-full text-sm font-bold border border-pink-200"
                        >
                          {tag}
                        </span>
                      ))}
                    </div>
                  </div>
                )}
              </div>
            )}
          </div>

          {/* Sidebar */}
          <div className="lg:col-span-1">
            <div className="sticky top-24 space-y-6">
              
              {/* CTA Card */}
              <div className="bg-gradient-to-br from-purple-600 via-pink-500 to-yellow-500 rounded-2xl p-6 text-white shadow-xl">
                <div className="text-center mb-4">
                  <Instagram className="w-16 h-16 mx-auto mb-3" />
                  <h3 className="text-2xl font-bold mb-2">‡∏£‡∏±‡∏ö‡∏ó‡∏≥ SEO</h3>
                  <p className="text-white/90">‡∏ï‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡πÑ‡∏£‡πâ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå</p>
                </div>
                <button className="w-full bg-white text-purple-600 py-3 rounded-xl font-bold hover:bg-yellow-50 transition-all shadow-md">
                  ‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡∏ü‡∏£‡∏µ
                </button>
              </div>

              {/* Info Card */}
              <div className="bg-white rounded-2xl shadow-lg p-6">
                <h4 className="font-bold text-lg mb-4 text-gray-900">‡∏ó‡∏≥‡πÑ‡∏°‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ AI?</h4>
                <ul className="space-y-3 text-gray-700">
                  <li className="flex items-start gap-2">
                    <span className="text-pink-500 mt-1">‚úì</span>
                    <span>‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏¥‡∏î‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤</span>
                  </li>
                  <li className="flex items-start gap-2">
                    <span className="text-pink-500 mt-1">‚úì</span>
                    <span>‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏°‡∏µ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏™‡∏π‡∏á</span>
                  </li>
                  <li className="flex items-start gap-2">
                    <span className="text-pink-500 mt-1">‚úì</span>
                    <span>‡πÄ‡∏û‡∏¥‡πà‡∏° Engagement</span>
                  </li>
                  <li className="flex items-start gap-2">
                    <span className="text-pink-500 mt-1">‚úì</span>
                    <span>‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢ ‡πÑ‡∏°‡πà‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô</span>
                  </li>
                </ul>
              </div>

              {/* Feature List */}
              <div className="bg-gradient-to-br from-yellow-50 to-pink-50 rounded-2xl shadow-md p-6 border border-pink-200">
                <h4 className="font-bold text-lg mb-4 text-gray-900">‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÄ‡∏î‡πà‡∏ô</h4>
                <ul className="space-y-2 text-gray-700 text-sm">
                  <li className="flex items-center gap-2">
                    <Sparkles className="w-4 h-4 text-pink-500" />
                    <span>‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥</span>
                  </li>
                  <li className="flex items-center gap-2">
                    <Hash className="w-4 h-4 text-pink-500" />
                    <span>‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÅ‡∏Æ‡∏ä‡πÅ‡∏ó‡πá‡∏Å</span>
                  </li>
                  <li className="flex items-center gap-2">
                    <Clock className="w-4 h-4 text-pink-500" />
                    <span>‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡πÇ‡∏û‡∏™‡∏ï‡πå</span>
                  </li>
                  <li className="flex items-center gap-2">
                    <Copy className="w-4 h-4 text-pink-500" />
                    <span>‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢</span>
                  </li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Footer */}
      <footer className="bg-gray-900 text-white py-8 mt-16">
        <div className="max-w-7xl mx-auto px-4 text-center">
          <div className="flex items-center justify-center gap-2 mb-2">
            <Instagram className="w-5 h-5 text-pink-400" />
            <span className="font-bold">AI Post Generator</span>
          </div>
          <p className="text-gray-400 text-sm">
            Powered by Claude AI ‚Ä¢ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏™‡∏π‡∏á‡πÉ‡∏ô‡πÑ‡∏°‡πà‡∏Å‡∏µ‡πà‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
          </p>
        </div>
      </footer>
    </div>
  );
};

export default App;